Функция ПротестироватьСлужбуМеркурий() Экспорт
    // Создаем тестовый документ в виде строки JSON
    JSONДокумент = "{";
    JSONДокумент = JSONДокумент + """docType"": 1,"; // Приход
    JSONДокумент = JSONДокумент + """operType"": 1,"; // Продажа
    JSONДокумент = JSONДокумент + """items"": [";
    
    // Добавляем тестовый товар
    JSONДокумент = JSONДокумент + "{";
    JSONДокумент = JSONДокумент + """name"": ""Тестовый товар"",";
    JSONДокумент = JSONДокумент + """price"": 100.00,";
    JSONДокумент = JSONДокумент + """quantity"": 2,";
    JSONДокумент = JSONДокумент + """sum"": 200.00,";
    JSONДокумент = JSONДокумент + """nds"": 20,";
    JSONДокумент = JSONДокумент + """ndsSum"": 40.00,";
    JSONДокумент = JSONДокумент + """mark"": """","; // Можно добавить маркировку если нужно
    JSONДокумент = JSONДокумент + """paymentMethod"": 4,"; // Полная оплата
    JSONДокумент = JSONДокумент + """paymentType"": 1"; // Безналичная оплата
    JSONДокумент = JSONДокумент + "}";
    JSONДокумент = JSONДокумент + "]";
    JSONДокумент = JSONДокумент + "}";
    
    Попытка
        // Создаем HTTP-соединение с таймаутом
        HTTP = Новый HTTPСоединение("localhost", 2579,,,, 20); // 20 секунд таймаут
        
        // Формируем заголовки
        Заголовки = Новый Соответствие;
        Заголовки.Вставить("Content-Type", "application/json");
        
        // Отправляем POST-запрос
        Ответ = HTTP.ОтправитьДляОбработки("POST", "/document", JSONДокумент, Заголовки);
        
        // Читаем ответ
        ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
        
        // Разбираем ответ вручную (так как это JSON строка)
        РезультатОтвета = РазобратьОтветJSON(ТекстОтвета);
        
        // Проверяем результат
        Если РезультатОтвета.status = "success" Тогда
            Сообщить("Тест успешен!");
            Сообщить("Фискальный номер: " + РезультатОтвета.fiscNumb);
            Сообщить("Фискальный признак: " + РезультатОтвета.fiscSign);
            Возврат Истина;
        Иначе
            Сообщить("Ошибка при обработке документа: " + РезультатОтвета.message);
            Возврат Ложь;
        КонецЕсли;
        
    Исключение
        Сообщить("Ошибка при выполнении запроса: " + ОписаниеОшибки());
        Возврат Ложь;
    КонецПопытки;
    
КонецФункции

// Функция для разбора JSON ответа
Функция РазобратьОтветJSON(ТекстJSON)
    Результат = Новый Структура;
    Результат.Вставить("status", "");
    Результат.Вставить("message", "");
    Результат.Вставить("fiscNumb", "");
    Результат.Вставить("fiscSign", "");
    
    // Простой парсер JSON (для базового ответа)
    ТекстJSON = СтрЗаменить(ТекстJSON, Символы.ПС, "");
    ТекстJSON = СтрЗаменить(ТекстJSON, Символы.ВК, "");
    ТекстJSON = СтрЗаменить(ТекстJSON, " ", "");
    ТекстJSON = Сред(ТекстJSON, 2, СтрДлина(ТекстJSON)-2); // Убираем { }
    
    // Ручной разбор строки на массив
    МассивПар = Новый Массив;
    ТекущаяСтрока = "";
    Для Индекс = 1 По СтрДлина(ТекстJSON) Цикл
        Символ = Сред(ТекстJSON, Индекс, 1);
        Если Символ = "," Тогда
            Если НЕ ПустаяСтрока(ТекущаяСтрока) Тогда
                МассивПар.Добавить(ТекущаяСтрока);
                ТекущаяСтрока = "";
            КонецЕсли;
        Иначе
            ТекущаяСтрока = ТекущаяСтрока + Символ;
        КонецЕсли;
    КонецЦикла;
    
    // Добавляем последнюю пару
    Если НЕ ПустаяСтрока(ТекущаяСтрока) Тогда
        МассивПар.Добавить(ТекущаяСтрока);
    КонецЕсли;
    
    // Разбор пар ключ-значение
    Для Каждого Пара Из МассивПар Цикл
        ПозицияДвоеточия = СтрНайти(Пара, ":");
        Если ПозицияДвоеточия > 0 Тогда
            Ключ = СтрЗаменить(Лев(Пара, ПозицияДвоеточия-1), """", "");
            Значение = СтрЗаменить(Сред(Пара, ПозицияДвоеточия+1), """", "");
            Результат.Вставить(Ключ, Значение);
        КонецЕсли;
    КонецЦикла;
    
    Возврат Результат;
КонецФункции

// Функция для тестирования настроек
Функция ПолучитьНастройкиСлужбы() Экспорт
    Попытка
        // Создаем HTTP-соединение с таймаутом
        HTTP = Новый HTTPСоединение("localhost", 2579,,,, 20); // 20 секунд таймаут
        
        // Отправляем GET-запрос
        Ответ = HTTP.Получить("/api/settings");
        
        // Читаем ответ
        ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
        
        // Разбираем ответ
        Настройки = РазобратьОтветJSON(ТекстОтвета);
        
        Сообщить("Текущие настройки службы:");
        Сообщить("Порт: " + Настройки.sourcePort);
        Сообщить("IP ККТ: " + Настройки.kktIP);
        Сообщить("Порт ККТ: " + Настройки.kktPort);
        Сообщить("COM порт: " + Настройки.comPort);
        
        Возврат Настройки;
        
    Исключение
        Сообщить("Ошибка при получении настроек: " + ОписаниеОшибки());
        Возврат Неопределено;
    КонецПопытки;
    
КонецФункции

// Пример использования:
// ПротестироватьСлужбуМеркурий();
// ПолучитьНастройкиСлужбы(); ))))))))))))))))))))))